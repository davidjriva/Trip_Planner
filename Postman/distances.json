{
	"info": {
		"_postman_id": "fa5b02aa-8cbc-431a-877d-1fdd01f5395a",
		"name": "distances",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_uid": "25883428-fa5b02aa-8cbc-431a-877d-1fdd01f5395a"
	},
	"item": [
		{
			"name": "base",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "7c866b03-6bc5-4064-b05e-cd6457c32e22",
						"exec": [
							"pm.test(\"Response is HTTP404 status\", () => {",
							"    pm.response.to.have.status(200);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "aad61009-402c-4787-b9c8-f579499546a3",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"requestType\": \"distances\",\n    \"places\": [],\n    \"earthRadius\": 1\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BASE_URL}}/api/distances",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"api",
						"distances"
					]
				}
			},
			"response": []
		},
		{
			"name": "alexr11: test one place",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "7c866b03-6bc5-4064-b05e-cd6457c32e22",
						"exec": [
							"pm.test(\"Status\", function ()",
							"{",
							"    pm.response.to.have.status(200);",
							"    pm.response.to.be.withBody;",
							"    pm.response.to.be.json;",
							"});",
							"",
							"pm.test(\"requestType test\", function () ",
							"{",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.requestType).to.eql(\"distances\");",
							"});",
							"",
							"pm.test(\"earthRadius test\", function()",
							"{",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.earthRadius).to.eql(9999999);",
							"});",
							"",
							"pm.test(\"places test\", function()",
							"{",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.places.length).to.eql(1);",
							"});",
							"",
							"pm.test(\"distances test\", function()",
							"{",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.distances.length).to.eql(1);",
							"    pm.expect(jsonData.distances[0]).to.eql(0);",
							"",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "81639908-fc52-4181-a116-1c746adbfcca",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"requestType\": \"distances\",\n\t\"places\": \n          [{\"name\": \"max\",\"latitude\": \"90.0\",\"longitude\": \"180.0\"}],\n\t\"earthRadius\": 9999999\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BASE_URL}}/api/distances",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"api",
						"distances"
					]
				}
			},
			"response": []
		},
		{
			"name": "alexr11: test 4 places",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "7c866b03-6bc5-4064-b05e-cd6457c32e22",
						"exec": [
							"pm.test(\"Status\", function ()",
							"{",
							"    pm.response.to.have.status(200);",
							"    pm.response.to.be.withBody;",
							"    pm.response.to.be.json;",
							"});",
							"",
							"pm.test(\"requestType test\", function () ",
							"{",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.requestType).to.eql(\"distances\");",
							"});",
							"",
							"pm.test(\"earthRadius test\", function()",
							"{",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.earthRadius).to.eql(3483705);",
							"});",
							"",
							"pm.test(\"places test\", function()",
							"{",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.places.length).to.eql(4);",
							"});",
							"",
							"pm.test(\"distances test\", function()",
							"{",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.distances.length).to.eql(4);",
							"    pm.expect(jsonData.distances[0]).to.eql(1117741);",
							"    pm.expect(jsonData.distances[1]).to.eql(7783278);",
							"    pm.expect(jsonData.distances[2]).to.eql(6945620);",
							"    pm.expect(jsonData.distances[3]).to.eql(6703313);",
							"",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "7e1d30b5-cf11-4637-ad51-0d55277d575b",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"requestType\": \"distances\",\n\t\"places\": \n          [{\"name\": \"Chicken\",\"latitude\": \"64.074\",\"longitude\": \"-141.938\"},\n   \t\t   {\"name\": \"Bystry\",\"latitude\": \"69.165\",\"longitude\": \"172.265\"}, \n    \t   {\"name\": \"Frias\",\"latitude\": \"-28.603\",\"longitude\": \"-65.108\"},\n\t\t   {\"name\": \"Louth\",\"latitude\": \"-30.511\",\"longitude\": \"145.125\"}],\n\t\"earthRadius\": 3483705\n}\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BASE_URL}}/api/distances",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"api",
						"distances"
					]
				}
			},
			"response": []
		},
		{
			"name": "alexr11: test 4 places max values",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "7c866b03-6bc5-4064-b05e-cd6457c32e22",
						"exec": [
							"pm.test(\"Status\", function ()",
							"{",
							"    pm.response.to.have.status(200);",
							"    pm.response.to.be.withBody;",
							"    pm.response.to.be.json;",
							"});",
							"",
							"pm.test(\"requestType test\", function () ",
							"{",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.requestType).to.eql(\"distances\");",
							"});",
							"",
							"pm.test(\"earthRadius test\", function()",
							"{",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.earthRadius).to.eql(9223372036854775807);",
							"});",
							"",
							"pm.test(\"places test\", function()",
							"{",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.places.length).to.eql(4);",
							"});",
							"",
							"pm.test(\"distances test\", function()",
							"{",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.distances.length).to.eql(4);",
							"    pm.expect(jsonData.distances[0]).to.eql(0);",
							"    pm.expect(jsonData.distances[1]).to.eql(9223372036854775807);",
							"    pm.expect(jsonData.distances[2]).to.eql(0);",
							"    pm.expect(jsonData.distances[3]).to.eql(9223372036854775807);",
							"",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "4881b68e-53b6-4d20-a9e2-b1ef73a66ed1",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"requestType\": \"distances\",\n\t\"places\": \n          [{\"name\": \"S pole max longitude\",\"latitude\": \"-90.0\",\"longitude\": \"180.0\"},\n   \t\t   {\"name\": \"S pole min longitude\",\"latitude\": \"-90.0\",\"longitude\": \"-180.0\"}, \n    \t   {\"name\": \"N pole max longitude\",\"latitude\": \"90.0\",\"longitude\": \"180.0\"},\n\t\t   {\"name\": \"N pole min longitude\",\"latitude\": \"90.0\",\"longitude\": \"-180.0\"}],\n\t\"earthRadius\": 9223372036854775807\n}\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BASE_URL}}/api/distances",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"api",
						"distances"
					]
				}
			},
			"response": []
		}
	]
}