{
	"info": {
		"_postman_id": "b5c85c36-d97a-4f8a-8e72-35ecdc337105",
		"name": "find",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_uid": "25883428-b5c85c36-d97a-4f8a-8e72-35ecdc337105"
	},
	"item": [
		{
			"name": "base",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "4211d5b6-7c10-46c9-8fa2-a0636a14aed7",
						"exec": [
							"pm.test(\"Response is HTTP404 status\", () => {",
							"    pm.response.to.have.status(200);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "931a21b1-2c2e-4eb3-881a-5f025daa92bc",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"requestType\": \"find\",\n    \"match\": \"denver\",\n    \"limit\": 1\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BASE_URL}}/api/find",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"api",
						"find"
					]
				}
			},
			"response": []
		},
		{
			"name": "driva-find-request",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "777cc200-e443-4a32-aaab-f6f7ee877778",
						"exec": [
							"",
							"pm.test(\"driva: Request is successful\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"driva: Request type is find\", function() {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.requestType).to.eql(\"find\")",
							"})",
							"pm.test(\"driva: Response contains the expected number of places\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.places).to.not.equal(null)",
							"    pm.expect(jsonData.places.length).to.equal(3)",
							"});",
							"",
							"pm.test(\"driva: Testing first place in match david\", function () {",
							"    var jsonData = pm.response.json();",
							"",
							"    pm.expect(jsonData.places[0].altitude).to.equal(\"835\");",
							"    pm.expect(jsonData.places[0].name).to.equal(\"Davidson Field\");",
							"    pm.expect(jsonData.places[0].country).to.equal(\"United States\");",
							"    pm.expect(jsonData.places[0].latitude).to.equal(\"36.015201568603516\");",
							"    pm.expect(jsonData.places[0].municipality).to.equal(\"Sage\");",
							"    pm.expect(jsonData.places[0].index).to.equal(\"1\");",
							"    pm.expect(jsonData.places[0].id).to.equal(\"2AR2\");",
							"    pm.expect(jsonData.places[0].region).to.equal(\"Arkansas\");",
							"    pm.expect(jsonData.places[0].longitude).to.equal(\"-91.79660034179688\");",
							"});",
							"",
							"pm.test(\"driva: Testing second place in match david\", function () {",
							"    var jsonData = pm.response.json();",
							"",
							"    pm.expect(jsonData.places[1].altitude).to.equal(\"188\");",
							"    pm.expect(jsonData.places[1].name).to.equal(\"Davidson Field\");",
							"    pm.expect(jsonData.places[1].country).to.equal(\"United States\");",
							"    pm.expect(jsonData.places[1].latitude).to.equal(\"44.79460144042969\");",
							"    pm.expect(jsonData.places[1].municipality).to.equal(\"Jefferson\");",
							"    pm.expect(jsonData.places[1].index).to.equal(\"2\");",
							"    pm.expect(jsonData.places[1].id).to.equal(\"2OR3\");",
							"    pm.expect(jsonData.places[1].region).to.equal(\"Oregon\");",
							"    pm.expect(jsonData.places[1].longitude).to.equal(\"-123.0979995727539\");",
							"});",
							"",
							"pm.test(\"driva: Testing third place in match david\", function () {",
							"    var jsonData = pm.response.json();",
							"",
							"    pm.expect(jsonData.places[2].altitude).to.equal(\"200\");",
							"    pm.expect(jsonData.places[2].name).to.equal(\"David Stanley Memorial Airport\");",
							"    pm.expect(jsonData.places[2].country).to.equal(\"United States\");",
							"    pm.expect(jsonData.places[2].latitude).to.equal(\"35.20640182495117\");",
							"    pm.expect(jsonData.places[2].municipality).to.equal(\"Gregory\");",
							"    pm.expect(jsonData.places[2].index).to.equal(\"3\");",
							"    pm.expect(jsonData.places[2].id).to.equal(\"36AR\");",
							"    pm.expect(jsonData.places[2].region).to.equal(\"Arkansas\");",
							"    pm.expect(jsonData.places[2].longitude).to.equal(\"-91.31890106201172\");",
							"});",
							"",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "660ca55f-1843-41d4-98a7-593d83c6c2f9",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"requestType\": \"find\",\n    \"match\": \"david\",\n    \"limit\": 3\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BASE_URL}}/api/find",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"api",
						"find"
					]
				}
			},
			"response": []
		}
	]
}